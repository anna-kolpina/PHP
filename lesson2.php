<?php

/*
1. Объявить две целочисленные переменные $a и $b и задать им произвольные начальные значения. Затем написать скрипт, который работает
по следующему принципу:
a. если $a и $b положительные, вывести их разность;
b. если $а и $b отрицательные, вывести их произведение;
c. если $а и $b разных знаков, вывести их сумму;
ноль можно считать положительным числом.*/
$a = -5;
$b = -1;
if ($a >= 0 && $b >= 0 ) {
    echo $result = $a - $b;
}
    else if ($a < 0 && $a < 0) {
        echo $result = $a * $b;
    }
        else echo $result = $a + $b;
 
/*
2. Реализовать основные 4 арифметические операции в виде функций с двумя параметрами.
Обязательно использовать оператор return.*/
function sum($x,$y) {
    return $x+$y;
}
$z = sum(5,6);
echo $z . '<br>';

function div($x,$y) {
    return $x/$y;
}
$z = div(18,6);
echo $z . '<br>';

function sub($a,$b) {
    return $a-$b;
}
$z = sub(10,6);
echo $z . '<br>';

function mul($a,$b) {
    return $a*$b;
}
$z = mul(2,7);
echo $z . '<br>';

/*
3. Реализовать функцию с тремя параметрами: function mathOperation($arg1, $arg2, $operation), где $arg1, $arg2 – значения аргументов,
$operation – строка с названием операции. В зависимости от переданного значения операции выполнить одну из арифметических операций
(использовать функции из пункта 3) и вернуть полученное значение (использовать switch).*/
function sum($arg1,$arg2) {
                return $sum = $arg1+$arg2;
                }
function div($arg1,$arg2) {
                return $div = $arg1/$arg2;
                }
function sub($arg1,$arg2) {
                return $sub = $arg1-$arg2;
                }
function mul($arg1,$arg2) {
                return $mul = $arg1*$arg2;
                }
$operation = '';
function mathOperation($arg1, $arg2, $operation) {
    switch ($operation) {
          case 'сложение';
            echo sum($arg1,$arg2);
            break;
          case 'деление';
            echo div($arg1,$arg2);
            break;
          case 'разность';
            echo sub($arg1,$arg2);
            break;
          case 'умножение';
            echo mul($arg1,$arg2);
            break;
          default;
            echo 'что-то не так';
            break;
    }
}
$result = mathOperation(3, 3, 'сложение');
echo $result;

/*
4. Используя имеющийся HTML шаблон, вывести текущий год в подвале при помощи встроенных функций PHP.*/
echo date("d.m.y");

/*
5. НЕ ВЫШЛО
*С помощью рекурсии организовать функцию возведения числа в степень. Формат: function power($val, $pow), где $val – заданное число,
$pow – степень.*/
function power($val, $pow) {
    $val = $val * $val; // умножаем
    --$pow; // уменьшаем степень на 1
        if ($pow>1) { // проверяем степень
                return; // возвращаемся
            }
                 break; // останавливаемся
        echo $val; // выводим на экран
}
power(6, 6);

/* 
6. *Написать функцию, которая вычисляет текущее время и возвращает его в формате с
правильными склонениями, например: 22 часа 15 минут, 21 час 43 минуты. */

/*
7. Написать программу в которой происходит инициализация переменной и после этого переменная удаляется.
Проверить существование переменной;*/
$a = 5;
$a = NULL;
echo $a;

/*
8. Даны два вещественных числа. Определить какое из них больше, а какое меньше.  В решении использовать тернарную операцию;*/
$x = 10;
$y = 6;
$z = ($x>$y) ? ('x больше y') : ('y больше x');
echo $z;

/*
9. Написать программу вычисления стоимости покупки с учетом скидки. Скидка в 3% предоставляется, если сумма покупки больше 500 рублей,
в 5% если сумма покупки больше 1000 рублей.*/
$a = 2000; // стоимости покупки
$b = $a; // конечная стоимости покупки
if ($a>500 && $a<1000) {
    $b = $a - ($a*0.03);
} else {
     if ($a>1000) {
        $b = $a - ($a*0.05); 
     } else {
         $b = $a;
     }
}
echo 'стоимость покупки = ' . $b . '<br>';

/*
10. Написать программу, которая проверяет является ли четным число, заданное во входных параметрах.*/
$x = 4; // задаем число
$y = ($x%2 != 0) ? ($x . ' - число нечетное') : ($x . ' - число четное'); // проверяем
echo $y; // выводим

/*
11. Написать программу, которая 10 раз выводит на экран имя и фамилию.*/
$x = 0; // вводим переменную
while ($x<10) { // создает условие
    $x++; // подсчитываем
    echo $x . '. ' . 'Иван Иванов' . '<br>'; // выводим на экран
}   
    
/*
12. Написать программу, которая выводит на экран таблицу квадратов первых десяти целых чисел.*/    
$x = 0; // вводим переменную
while ($x<10) { // создаем условие
    $x++; // подсчитываем
    $y = $x * $x;
    echo $x . '*<sup>2</sup>' . ' = ' . $y . '<br>'; // выводим на экран
}     
 
/*
13. Написать программу для подсчета суммы чисел от 1 до 100.*/
$x = 0; // вводим переменную
while ($x<100) { // создаем условие
    $x++; // подсчитываем
    $z += $x;
}     
echo $z; // выводим на экран

/*
14. Вывести на экран все целые числа от 100 до 200 кратные 3*/
$x = 99; // вводим переменную
while ($x<200) { // создаем условие
    $x++; // подсчитываем
    if ($x%2===0 && $x%3===0) { // создаем условие
        echo $x . '<br>'; // выводим на экран
    }
}

/*
15. Вывести числа от 100 до 80, исключая число 90. Использовать два варианта циклов*/
$x = 101; // вводим переменную
while ($x>80) { // создаем условие
    $x--; // подсчитываем
    if ($x != 90) { // создаем условие
        echo $x . '<br>'; // выводим на экран
    }
}

$i = 100; // вводим переменную
do {
    if ($i != 90) {
       echo $i . '<br>'; // выводим на экран 
    }
       $i--; // подсчитываем
} 
while ($i>79); // цикл
















